version: '3.8'

services:
  db:
    image: postgres:13.7
    # Том, куда будут сохранятся данные базы
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    # Переменные, которые используются только postgre
    env_file:
      - ./.env.prod.db

  drf-adminer-prod:
    image: adminer:4.7.8-standalone
    hostname: db-adminer-prod
    container_name: db-adminer-prod
    restart: always
    ports:
      - 8090:8080
    depends_on:
      - db

  web:
    # Билд образа для продакшена
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn django_project.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 наружу
    # expose:
    #   - 8000
    ports:
      - 8000:8000
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    # Файл с переменными, которые будут использоваться
    # в основном в setting.py
    env_file:
      - ./.env.prod
    # Дожидаемся запуска db
    depends_on:
      - db

  nginx:
    build: ./nginx
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    # Порт внешний/внутренний
    ports:
      - 8888:80
    depends_on:
      - web

volumes:
  postgres_volume:
  static_volume:
  media_volume:
